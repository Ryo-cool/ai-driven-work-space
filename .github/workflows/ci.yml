name: 🚀 CI/CD Pipeline

# PR作成・更新時のみ実行 (mainブランチへの直接pushは除外)
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
  # 手動実行も可能
  workflow_dispatch:

# 同時実行制御 - 同一PRで複数のワークフローが動かないように
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # コードクオリティチェック
  quality-check:
    name: 🔍 Code Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: make install

      - name: 🔍 TypeScript type check
        run: make typecheck

      - name: 🧹 ESLint check
        run: make lint

      - name: 📊 Dependency vulnerability check
        run: make deps-check
        continue-on-error: true  # 脆弱性があってもCIを止めない

  # ビルドテスト
  build-test:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: quality-check
    
    env:
      # CI環境用のモックConvex設定
      NEXT_PUBLIC_CONVEX_URL: "https://mock-ci-convex.convex.cloud"

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: make install

      - name: 🏗️ Build application
        run: make build

      - name: 📈 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: .next/
          retention-days: 7

  # 並列実行でパフォーマンス向上
  matrix-check:
    name: 🔄 Matrix Validation
    runs-on: ubuntu-latest
    timeout-minutes: 8
    strategy:
      matrix:
        node-version: [18, 20]
      fail-fast: false

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm install

      - name: 🔍 Quick validation
        run: |
          npm run lint
          npx tsc --noEmit

  # PR情報の更新
  pr-info:
    name: 📝 PR Information
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📊 PR Stats
        run: |
          echo "## 📊 PR Statistics" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: \`${{ github.head_ref }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Base**: \`${{ github.base_ref }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Commits**: $(git rev-list --count origin/${{ github.base_ref }}..${{ github.sha }})" >> $GITHUB_STEP_SUMMARY
          echo "- **Files changed**: $(git diff --name-only origin/${{ github.base_ref }}...${{ github.sha }} | wc -l)" >> $GITHUB_STEP_SUMMARY

      - name: 🏷️ Auto-label PR
        uses: actions/labeler@v5
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"

  # すべてのチェックが完了した時の最終確認
  ci-success:
    name: ✅ CI Success
    runs-on: ubuntu-latest
    needs: [quality-check, build-test]
    if: always()
    
    steps:
      - name: 🎉 All checks passed
        if: ${{ needs.quality-check.result == 'success' && needs.build-test.result == 'success' }}
        run: |
          echo "🎉 All CI checks passed successfully!"
          echo "✅ Ready for code review and merge"

      - name: ❌ Some checks failed
        if: ${{ needs.quality-check.result == 'failure' || needs.build-test.result == 'failure' }}
        run: |
          echo "❌ Some CI checks failed"
          echo "🔍 Please check the logs and fix the issues"
          exit 1